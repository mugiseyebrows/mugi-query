// DO NOT EDIT ** This file was generated by mugicpp ** DO NOT EDIT
#include "field.h"

Field::Field()
    : mType("INT"), mSize(-1), mPrimaryKey(false), mAutoincrement(false), mIndex(false),
      mUnique(false), mForeignKey(QString()) {
}
Field::Field(const QString& name, const QString& type, int size, bool primaryKey,
             bool autoincrement, bool index, bool unique, const QString& foreignKey)
    : mName(name), mType(type), mSize(size), mPrimaryKey(primaryKey), mAutoincrement(autoincrement),
      mIndex(index), mUnique(unique), mForeignKey(foreignKey) {
}
QString Field::name() const {
    return mName;
}
void Field::setName(const QString& value) {
    mName = value;
}
QString Field::type() const {
    return mType;
}
void Field::setType(const QString& value) {
    mType = value;
}
int Field::size() const {
    return mSize;
}
void Field::setSize(int value) {
    mSize = value;
}
bool Field::primaryKey() const {
    return mPrimaryKey;
}
void Field::setPrimaryKey(bool value) {
    mPrimaryKey = value;
}
bool Field::autoincrement() const {
    return mAutoincrement;
}
void Field::setAutoincrement(bool value) {
    mAutoincrement = value;
}
bool Field::index() const {
    return mIndex;
}
void Field::setIndex(bool value) {
    mIndex = value;
}
bool Field::unique() const {
    return mUnique;
}
void Field::setUnique(bool value) {
    mUnique = value;
}
QString Field::foreignKey() const {
    return mForeignKey;
}
void Field::setForeignKey(const QString& value) {
    mForeignKey = value;
}
